{% raw -%}
version: 2.1

defaults: &defaults
  working_directory: ~/repo

filter_ignore_main: &filter_ignore_main
  filters:
    branches:
      ignore:
        - main
        - /^release.*/
    tags:
      only:
        - /^v.*/

filter_only_develop_or_tag: &filter_only_develop_or_tag
  filters:
    branches:
      only:
        - develop
    tags:
      only:
        - /^v.*/

executors:
  base:
    docker:
      - image: cimg/base:stable-20.04
  python:
    docker:
      - image: cimg/python:3.9.7
  node:
    docker:
      - image: cimg/node:16.17
  php:
    docker:
      - image: cimg/php:7.4

references:
  restore_npm: &restore_npm
    restore_cache:
      keys:
        - v1-npm-{{ checksum "src/app/themes/main/frontend/package.json" }}
        - v1-npm-
  save_npm: &save_npm
    save_cache:
      key: v1-npm-{{ checksum "src/app/themes/main/frontend/package.json" }}
      paths:
        - ~/repo/src/app/themes/main/frontend/node_modules
  restore_composer: &restore_composer
    restore_cache:
      keys:
        - v1-composer-{{ checksum "composer.lock" }}
        - v1-composer-
  save_composer: &save_composer
    save_cache:
      key: v1-composer-{{ checksum "composer.lock" }}
      paths:
        - ~/repo/vendor
  restore_venv: &restore_venv
    restore_cache:
      keys:
        - v1-venv-{{ checksum "deploy/requirements.txt" }}
        - v1-venv-
  save_venv: &save_venv
    save_cache:
      key: v1-venv-{{ checksum "deploy/requirements.txt" }}
      paths:
        - ~/repo/deploy/venv

jobs:
  checkout_code:
    <<: *defaults
    executor: base
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - .

  frontend:
    <<: *defaults
    executor: node
    steps:
      - attach_workspace:
          at: .
      - *restore_npm
      - run: cd src/app/themes/main/frontend && npm install
      - *save_npm
      - run: cd src/app/themes/main/frontend && npm run build:production
      - persist_to_workspace:
          root: .
          paths:
            - src/app/themes/main/dist

  wordpress:
    <<: *defaults
    executor: php
    steps:
      - attach_workspace:
          at: .
      - *restore_composer
      - run:
          command: |
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            php -r "if (hash_file('SHA384', 'composer-setup.php') === trim(file_get_contents('https://composer.github.io/installer.sig'))) { echo 'Installer verified'; } else { echo 'Installer invalid'; unlink('composer-setup.php'); } echo PHP_EOL;"
            php composer-setup.php
            php -r "unlink('composer-setup.php');"
      - run:
          command: |
            ACF_PRO_KEY=$ACF_PRO_KEY php composer.phar install --no-scripts --optimize-autoloader --no-dev
      - *save_composer
      - persist_to_workspace:
          root: .
          paths:
            - src/app/mu-plugins/*
            - src/app/plugins/*
            - src/wp
            - vendor

  venv:
    <<: *defaults
    executor: python
    steps:
      - attach_workspace:
          at: .
      - *restore_venv
      - run:
          command: |
            cd deploy
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
      - *save_venv

  deploy:
    <<: *defaults
    executor: python
    steps:
      - attach_workspace:
          at: .
      - *restore_venv
      - run:
          command: |
            sudo apt-get update
            sudo apt-get -y -qq install rsync
      - run:
          command: |
            cd deploy
            . venv/bin/activate
            ansible-galaxy install -r requirements.yml

            if [ "${CIRCLE_BRANCH}" == "develop" ]; then
              ansible-playbook deploy.yml -i stages/stage.yml
            fi
            if [ "${CIRCLE_TAG}" ]; then
              ansible-playbook deploy.yml -i stages/prod.yml
            fi

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - checkout_code:
          <<: *filter_ignore_main
      - frontend:
          <<: *filter_ignore_main
          requires:
            - checkout_code
      - wordpress:
          <<: *filter_ignore_main
          context:
            - ACF_PRO_KEY
          requires:
            - checkout_code
      - venv:
          <<: *filter_ignore_main
          requires:
            - checkout_code
      - deploy:
          <<: *filter_only_develop_or_tag
          requires:
            - wordpress
            - frontend
            - venv

{% endraw %}
